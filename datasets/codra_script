#!/bin/bash

echo "Please specificy the directory you would like to run codra on."

read dir_name

mytimeout() {

    time=$1

    # start the command in a subshell to avoid problem with pipes
    # (spawn accepts one command)
    command="/bin/sh -c \"$2\""

    expect -c "set echo \"-noecho\"; set timeout $time; spawn -noecho $command; expect timeout { exit 1 } eof { exit 0 }"

    if [ $? = 1 ] ; then
        echo "Timeout after ${time} seconds"
    fi

}

for entry in "$dir_name"/*
do
  docker system prune -f
  if [[ -d $entry ]]; then
    for sub_entry in "$entry"/*
    do
      if [[ "$sub_entry" != *".edu" ]]; then
        if [[ "$sub_entry" != *"_tree"* ]]; then
          if [ ! -f "{$sub_entry}.edu" ]; then
            if [ ! -f "${sub_entry%.*}_tree.txt" ]; then
              mytimeout 300 "docker run --log-opt max-size=50m -v $PWD/$entry:$PWD/$entry -ti codra $PWD/$sub_entry >> "${sub_entry%.*}_tree.txt""
              exit_status=$?
              if [[ $exit_status -eq 0 ]]; then
                echo "Tree produced and saved for $sub_entry"
              elif [[ $exit_status -eq 124 ]]; then
                echo "Timeout on $sub_entry"
              else
                echo "Failed to produce and save tree for $sub_entry"
              fi
            else
              echo "Tree file exists for $sub_entry, skipped producing the tree"
            fi
          else
            echo "EDU file exists for $sub_entry, skipped producing the tree."
          fi
        else
          echo "Tree file $sub_entry ignored."
        fi
      else
        echo "EDU file $sub_entry ignored."
      fi
    done

  elif [[ -f $entry ]]; then
    if [[ "$entry" != *".edu" ]]; then
      if [[ "$entry" != *"_tree"* ]]; then
        if [ ! -f "{$sub_entry}.edu" ]; then
          if [ ! -f "${entry%.*}_tree.txt" ]; then
            mytimeout 300 "docker run --log-opt max-size=50m -v $PWD/$dir_name:$PWD/$dir_name -ti codra $PWD/$entry >> "${entry%.*}_tree.txt""
            exit_status=$?
            if [[ $exit_status -eq 0 ]]; then
              echo "Tree produced and saved for $entry"
            elif [[ $exit_status -eq 124 ]]; then
              echo "Timeout on $entry"
            else
              echo "Failed to produce and save tree for $entry"
            fi
          else
            echo "Tree file exists for $sub_entry, skipped producing the tree."
          fi
        else
          echo "EDU file exists for $sub_entry, skipped producing the tree."
        fi
      else
        echo "Tree file $entry ignored."
      fi
    else
      echo "EDU file $entry ignored."
    fi
  fi
done
